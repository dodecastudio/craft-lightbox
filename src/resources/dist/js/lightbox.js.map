{"version":3,"sources":["../../src/js/utils.js","../../src/js/Lightbox.js"],"names":["focusFirstDescendant","element","fallback","i","childNodes","length","child","attemptFocus","isFocusable","focus","e","document","activeElement","tabIndex","disabled","nodeName","href","rel","type","window","initLightbox","_ref","cssClasses","identifier","launchLightboxCssClass","responsive","srcsetSizes","translations","body","querySelector","lightbox","getElementById","concat","lightboxWrapper","lightboxContent","lightboxPrevious","lightboxNext","lightboxClose","lightboxCaption","lightboxTotal","lightboxLinks","querySelectorAll","lightboxGalleries","lightboxSettings","timing","currentGallery","current","open","touch","startPos","lastPos","direction","moveThreshold","lastKeyboardControl","isTouchDevice","supportedResponsiveMimeTypes","openLightbox","galleryTotal","images","galleryTitle","title","galleryDescription","LIGHTBOX_UNTITLED_DYNAMIC_LABEL_s","LIGHTBOX_UNTITLED_DYNAMIC_LABEL_p","LIGHTBOX_DYNAMIC_LABEL_s","LIGHTBOX_DYNAMIC_LABEL_p","replace","setAttribute","style","display","classList","add","closeLightbox","initialFocus","LIGHTBOX_LABEL","remove","innerText","innerHTML","loadPreviousImage","loadLightboxImage","isPrevious","loadNextImage","isNext","disableNavControls","setProperty","enableNavControls","removeProperty","addEndTransition","setTimeout","resetImagePosition","newThumbnail","image","_lightboxGalleries$li","mimetype","srcsetImages","includes","lightboxPicture","map","size","lightboxImage","lightboxImageTemplate","averageColor","hslColor","split","backgroundColor","img","lightboxImageLoading","onload","currentImageIndex","dataset","showcounter","screenReaderOnly","screenReaderOnlyClasses","showcaptions","renderInfo","setPosition","clearTransitions","x","endPosition","forEach","lightboxLink","galleryRef","gallery","galleryContainer","ref","_lightboxLink$dataset","orientation","srcset","permalink","averagecolor","push","currentIndex","addEventListener","preventDefault","currentTarget","lightboxFocusableElements","firstFocusableElement","altFirstFocusableElement","lastFocusableElement","altLastFocusableElement","key","shiftKey","keyCode","target","id","touches","clientX","passive"],"mappings":"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","sourcesContent":["export const focusableElements = (target) => {\n  return target.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]');\n};\n\nexport const focusFirstDescendant = (element, fallback) => {\n  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (attemptFocus(child) || focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  if (fallback && attemptFocus(fallback)) {\n    return true;\n  }\n  return false;\n};\n\nexport const attemptFocus = (element) => {\n  if (!isFocusable(element)) {\n    return false;\n  }\n\n  try {\n    element.focus();\n  } catch (e) {\n    return false;\n  }\n\n  return document.activeElement === element;\n};\n\nexport const isFocusable = (element) => {\n  if (element.tabIndex < 0) {\n    return false;\n  }\n\n  if (element.disabled) {\n    return false;\n  }\n\n  switch (element.nodeName) {\n    case 'A':\n      return !!element.href && element.rel != 'ignore';\n    case 'INPUT':\n      return element.type != 'hidden';\n    case 'BUTTON':\n    case 'SELECT':\n    case 'TEXTAREA':\n    case 'AREA':\n      return true;\n    default:\n      return false;\n  }\n};\n","// Dependencies\nimport { focusFirstDescendant, focusableElements } from './utils.js';\n\n// Lightbox functionality\nconst initLightbox = ({ cssClasses, identifier, launchLightboxCssClass, responsive, srcsetSizes, translations }) => {\n  const body = document.querySelector('body');\n  const lightbox = document.getElementById(`${identifier}-modal`);\n  const lightboxWrapper = document.getElementById(`${identifier}-container`);\n  const lightboxContent = document.getElementById(`${identifier}-frame`);\n\n  const lightboxPrevious = document.getElementById(`${identifier}-control-previous`);\n  const lightboxNext = document.getElementById(`${identifier}-control-next`);\n  const lightboxClose = document.getElementById(`${identifier}-control-close`);\n  const lightboxCaption = document.getElementById(`${identifier}-info-caption`);\n  const lightboxTotal = document.getElementById(`${identifier}-info-total`);\n\n  const lightboxLinks = document.querySelectorAll(`.${launchLightboxCssClass}`);\n  const lightboxGalleries = {};\n\n  const lightboxSettings = {\n    timing: 500,\n    currentGallery: 'default',\n    current: -1,\n    open: false,\n    touch: {\n      startPos: 0,\n      lastPos: 0,\n      direction: 0,\n      moveThreshold: 50,\n    },\n    lastKeyboardControl: false,\n    isTouchDevice: 'ontouchstart' in window,\n    supportedResponsiveMimeTypes: ['image/jpeg', 'image/png', 'image/tiff', 'image/webp'],\n  };\n\n  // Open the lightbox\n  const openLightbox = () => {\n    const galleryTotal = lightboxGalleries[lightboxSettings.currentGallery].images.length;\n    const galleryTitle = lightboxGalleries[lightboxSettings.currentGallery].title;\n    let galleryDescription = galleryTotal == 1 ? translations.LIGHTBOX_UNTITLED_DYNAMIC_LABEL_s : translations.LIGHTBOX_UNTITLED_DYNAMIC_LABEL_p;\n    if (galleryTitle !== 'untitled') {\n      galleryDescription = galleryTotal == 1 ? translations.LIGHTBOX_DYNAMIC_LABEL_s : translations.LIGHTBOX_DYNAMIC_LABEL_p;\n    }\n    galleryDescription = galleryDescription.replace('{total}', galleryTotal);\n    galleryDescription = galleryDescription.replace('{title}', galleryTitle);\n    // Update aria label\n    lightbox.setAttribute('aria-label', galleryDescription);\n    lightbox.style.display = 'flex';\n    lightbox.setAttribute('aria-hidden', false);\n    body.classList.add('disablescroll');\n    lightboxSettings.open = true;\n    lightboxWrapper.focus();\n    focusFirstDescendant(lightboxWrapper, lightboxClose);\n  };\n\n  // Close the lightbox and reset all settings\n  const closeLightbox = () => {\n    if (window.initialFocus) {\n      window.initialFocus.focus();\n    }\n    lightbox.style.display = 'none';\n    lightbox.setAttribute('aria-label', translations.LIGHTBOX_LABEL);\n    lightbox.setAttribute('aria-hidden', true);\n    body.classList.remove('disablescroll');\n    lightboxSettings.current = -1;\n    lightboxSettings.open = false;\n    lightboxTotal.style.display = 'none';\n    lightboxTotal.innerText = ``;\n    lightboxCaption.style.display = 'none';\n    lightboxContent.innerHTML = ``;\n    lightboxContent.classList.remove(`${cssClasses.lightboxContent}--loading`);\n    lightboxSettings.lastKeyboardControl = false;\n  };\n\n  // Render the navigational controls\n  const renderControls = () => {\n    // Show appropriate controls\n    if (!isPrevious() && !isNext()) {\n      disableNavControls();\n    } else {\n      enableNavControls();\n      // Show previous navigation control if there is a previous image\n      if (isPrevious()) {\n        lightboxPrevious.classList.remove('visibility-hidden');\n        lightboxPrevious.disabled = false;\n      } else {\n        lightboxPrevious.classList.add('visibility-hidden');\n        lightboxPrevious.disabled = true;\n      }\n      // Show previous navigation control if there is a next image\n      if (isNext()) {\n        lightboxNext.classList.remove('visibility-hidden');\n        lightboxNext.disabled = false;\n      } else {\n        lightboxNext.classList.add('visibility-hidden');\n        lightboxNext.disabled = true;\n      }\n    }\n    if (lightboxSettings.lastKeyboardControl === 'right') {\n      if (!lightboxNext.disabled) {\n        lightboxNext.focus();\n      } else {\n        lightbox.focus();\n      }\n    }\n    if (lightboxSettings.lastKeyboardControl === 'left') {\n      if (!lightboxPrevious.disabled) {\n        lightboxPrevious.focus();\n      } else {\n        lightbox.focus();\n      }\n    }\n  };\n\n  // Render the navigational controls\n  const renderInfo = (img) => {\n    const galleryTotal = lightboxGalleries[lightboxSettings.currentGallery].images.length;\n    const { title } = lightboxGalleries[lightboxSettings.currentGallery].images[lightboxSettings.current];\n    const currentImageIndex = lightboxSettings.current + 1;\n    // Apply counter settings\n    if (lightbox.dataset.showcounter) {\n      lightboxTotal.style.removeProperty('display');\n      lightboxTotal.innerHTML = `<span class=\"${cssClasses.screenReaderOnly} ${cssClasses.screenReaderOnlyClasses}\">Image ${currentImageIndex} of ${galleryTotal}.</span><span aria-hidden=\"true\">${currentImageIndex}/${galleryTotal}</span>`;\n    }\n    // Apply caption settings\n    if (lightbox.dataset.showcaptions) {\n      lightboxCaption.style.removeProperty('display');\n      lightboxCaption.innerHTML = title;\n    } else {\n      img.setAttribute('alt', title);\n    }\n  };\n\n  // Load the previous image\n  const loadPreviousImage = () => {\n    lightboxSettings.touch.direction = -1;\n    loadLightboxImage(lightboxSettings.current - (isPrevious() ? 1 : 0));\n  };\n\n  // Load the next image\n  const loadNextImage = () => {\n    lightboxSettings.touch.direction = 1;\n    loadLightboxImage(lightboxSettings.current + (isNext() ? 1 : 0));\n  };\n\n  // Is there a valid previous image?\n  const isPrevious = () => {\n    return lightboxSettings.current > 0;\n  };\n\n  // Is there a valid next image?\n  const isNext = () => {\n    return lightboxSettings.current < lightboxGalleries[lightboxSettings.currentGallery].images.length - 1;\n  };\n\n  // Disable navigation controls\n  const disableNavControls = () => {\n    lightboxPrevious.style.setProperty('display', 'none');\n    lightboxNext.style.setProperty('display', 'none');\n  };\n\n  // Enable navigation controls\n  const enableNavControls = () => {\n    lightboxPrevious.style.removeProperty('display');\n    lightboxNext.style.removeProperty('display');\n  };\n\n  // HTML template for a lightbox image\n  const lightboxImageTemplate = (i) => {\n    const { image, mimetype, srcsetImages, title } = lightboxGalleries[lightboxSettings.currentGallery].images[i];\n    const isSupported = lightboxSettings.supportedResponsiveMimeTypes.includes(mimetype);\n    if (isSupported && responsive) {\n      return `\n        <picture class=\"${cssClasses.lightboxPicture}\">\n          <source\n            type=\"${mimetype}\"\n            srcset=\"${srcsetSizes.map((size, i) => {\n              return `${srcsetImages[i]} ${size}w,`;\n            })}\n            ${srcsetImages[0]}\" />\n          <img\n            alt=\"\"\n            class=\"${cssClasses.lightboxImage}\"\n            loading=\"lazy\"\n            src=\"${srcsetImages[0]}\" />\n        </picture>\n      `;\n    }\n    // aria-labelledby=\"${identifier}-info-caption\"\n    return `\n      <img\n        alt=\"${title}\"\n        class=\"${cssClasses.lightboxImage}\"\n        loading=\"lazy\"\n        src=\"${image}\" />\n    `;\n  };\n\n  // Load an image from the lightbox images array\n  const loadLightboxImage = (i) => {\n    // Check this is a valid image to load\n    const galleryTotal = lightboxGalleries[lightboxSettings.currentGallery].images.length;\n    const isValid = i >= 0 && i <= galleryTotal - 1 && galleryTotal > 0;\n    if (isValid) {\n      if (!lightboxSettings.open) {\n        openLightbox();\n      }\n      if (lightboxSettings.current !== i) {\n        lightboxSettings.current = i;\n        renderControls();\n        addEndTransition();\n        window.setTimeout(() => {\n          resetImagePosition();\n          const newThumbnail = lightboxImageTemplate(i);\n          const { averageColor } = lightboxGalleries[lightboxSettings.currentGallery].images[i];\n          lightboxContent.innerHTML = newThumbnail;\n          if (averageColor) {\n            const hslColor = averageColor.replace(/[^\\d,]/g, '').split(',');\n            lightbox.style.backgroundColor = `hsla(${hslColor[0]},${hslColor[1]}%,${hslColor[2] * 0.5}%,0.95)`;\n          }\n          const img = lightboxContent.querySelector('img');\n          if (img) {\n            lightboxContent.classList.add(cssClasses.lightboxImageLoading);\n            img.onload = () => {\n              lightboxContent.classList.remove(cssClasses.lightboxImageLoading);\n            };\n          }\n          renderInfo(img);\n        }, lightboxSettings.timing);\n      }\n    }\n  };\n\n  // Reset image position and transitions\n  const resetImagePosition = () => {\n    setPosition(0);\n    clearTransitions();\n  };\n\n  // Set position to a given x value\n  const setPosition = (x) => {\n    lightboxContent.setAttribute('style', `transform: translate3d(${x}px, 0, 0)`);\n  };\n\n  // Set end position for transition\n  const addEndTransition = () => {\n    const endPosition = lightboxSettings.touch.direction > 0 ? '-200%' : lightboxSettings.touch.direction < 0 ? '200%' : 0;\n    lightboxContent.setAttribute('style', `transition-property: transform; transition-duration: ${lightboxSettings.timing}ms; transform: translate3d(${endPosition}, 0, 0)`);\n  };\n\n  // Clear CSS transitions\n  const clearTransitions = () => {\n    lightboxContent.style.removeProperty('transition');\n  };\n\n  // Parse lightbox images\n  if (lightboxLinks.length > 0) {\n    lightboxLinks.forEach((lightboxLink) => {\n      const galleryRef = lightboxLink.dataset.gallery ? lightboxLink.dataset.gallery : 'default';\n\n      // Set default settings for this gallery\n      if (typeof lightboxGalleries[galleryRef] === 'undefined') {\n        const galleryContainer = document.getElementById(galleryRef);\n        const galleryTitle = galleryContainer && galleryContainer.dataset.title ? galleryContainer.dataset.title : 'untitled';\n        lightboxGalleries[galleryRef] = {\n          ref: galleryRef,\n          title: galleryTitle,\n          images: [],\n        };\n      }\n\n      // Dataset attrs\n      const { title, orientation, srcset, mimetype, ref, permalink, averagecolor } = lightboxLink.dataset;\n\n      // Add to lightbox images array for this gallery\n      lightboxGalleries[galleryRef].images.push({\n        image: lightboxLink.href,\n        title: title,\n        orientation: orientation,\n        srcsetImages: srcset.split(','),\n        mimetype: mimetype,\n        ref: ref || null,\n        gallery: galleryRef,\n        permalink: permalink || null,\n        averageColor: averagecolor || null,\n      });\n\n      const currentIndex = lightboxGalleries[galleryRef].images.length - 1;\n\n      // Add click event to the anchor\n      lightboxLink.addEventListener('click', (e) => {\n        e.preventDefault();\n        lightboxSettings.currentGallery = galleryRef;\n        loadLightboxImage(currentIndex);\n        window.initialFocus = e.currentTarget;\n      });\n    });\n\n    // Keyboard controls\n    window.addEventListener('keydown', (e) => {\n      if (lightboxSettings.open) {\n        const lightboxFocusableElements = focusableElements(lightbox);\n        const firstFocusableElement = lightboxFocusableElements[0];\n        const altFirstFocusableElement = lightboxFocusableElements[1];\n        const lastFocusableElement = lightboxFocusableElements[lightboxFocusableElements.length - 1];\n        const altLastFocusableElement = lightboxFocusableElements[lightboxFocusableElements.length - 2];\n\n        const handleBackwardTab = () => {\n          if (\n            document.activeElement === firstFocusableElement ||\n            (firstFocusableElement.disabled && document.activeElement === altFirstFocusableElement) ||\n            (firstFocusableElement.disabled && document.activeElement === lightbox)\n          ) {\n            e.preventDefault();\n            if (!lastFocusableElement.disabled) {\n              lastFocusableElement.focus();\n            } else {\n              altLastFocusableElement.focus();\n            }\n          }\n        };\n\n        const handleForwardTab = () => {\n          if (\n            document.activeElement === lastFocusableElement ||\n            (lastFocusableElement.disabled && document.activeElement === altLastFocusableElement) ||\n            (lastFocusableElement.disabled && document.activeElement === lightbox)\n          ) {\n            e.preventDefault();\n            if (!firstFocusableElement.disabled) {\n              firstFocusableElement.focus();\n            } else {\n              altFirstFocusableElement.focus();\n            }\n          }\n          if (firstFocusableElement.disabled && lastFocusableElement.disabled) {\n            e.preventDefault();\n            lightboxClose.focus();\n          }\n        };\n\n        // Trap tab within modal\n        if (e.key === 'Tab') {\n          if (lightboxFocusableElements.length === 1) {\n            e.preventDefault();\n          }\n\n          if (e.shiftKey) {\n            handleBackwardTab();\n          } else {\n            handleForwardTab();\n          }\n        }\n\n        if (e.keyCode === 32 || e.key === 'Enter') {\n          if (document.activeElement === lightboxPrevious) {\n            lightboxSettings.lastKeyboardControl = 'ArrowLeft';\n          }\n          if (document.activeElement === lightboxNext) {\n            lightboxSettings.lastKeyboardControl = 'ArrowRight';\n          }\n        }\n\n        if (e.key === 'Escape') {\n          closeLightbox();\n        }\n        if (e.key === 'ArrowLeft') {\n          lightboxSettings.lastKeyboardControl = 'ArrowLeft';\n          loadPreviousImage();\n        }\n        if (e.key === 'ArrowRight') {\n          lightboxSettings.lastKeyboardControl = 'ArrowRight';\n          loadNextImage();\n        }\n      }\n    });\n\n    // Click outside the lightbox content to close\n    lightbox.addEventListener('click', (e) => {\n      if (e.target.id === 'df-lightbox') {\n        e.preventDefault();\n        closeLightbox();\n      }\n    });\n\n    // Previous button\n    lightboxPrevious.addEventListener('click', (e) => {\n      e.preventDefault();\n      loadPreviousImage();\n    });\n\n    // Next button\n    lightboxNext.addEventListener('click', (e) => {\n      e.preventDefault();\n      loadNextImage();\n    });\n\n    // Close button\n    lightboxClose.addEventListener('click', (e) => {\n      e.preventDefault();\n      closeLightbox();\n    });\n\n    // Touch movement event\n    lightboxContent.addEventListener(\n      'touchmove',\n      (e) => {\n        if (lightboxSettings.touch.lastPos > lightboxSettings.touch.startPos) {\n          lightboxSettings.touch.direction = -1;\n        } else {\n          lightboxSettings.touch.direction = 1;\n        }\n\n        // If we're moving the content to the right, and we're not on the first slide...\n        if (lightboxSettings.touch.direction < 0 && !isNext()) {\n          setPosition(e.touches[0].clientX - lightboxSettings.touch.startPos);\n        }\n\n        // If we're moving the content to the left, and we're not on the last slide...\n        if (lightboxSettings.touch.direction > 0 && !isPrevious()) {\n          setPosition(e.touches[0].clientX - lightboxSettings.touch.startPos);\n        }\n\n        // If we've got a netx/previous, allow move\n        if (isPrevious() && isNext()) {\n          setPosition(e.touches[0].clientX - lightboxSettings.touch.startPos);\n        }\n\n        lightboxSettings.touch.lastPos = e.touches[0].clientX;\n      },\n      { passive: true }\n    );\n\n    // Touch start event\n    lightboxContent.addEventListener(\n      'touchstart',\n      (e) => {\n        lightboxSettings.touch.startPos = e.touches[0].clientX;\n        lightboxSettings.touch.direction = 0;\n        clearTransitions();\n      },\n      { passive: true }\n    );\n\n    // Touch end event\n    lightboxContent.addEventListener(\n      'touchend',\n      () => {\n        if (lightboxSettings.touch.lastPos - lightboxSettings.touch.startPos > lightboxSettings.touch.moveThreshold) {\n          if (isPrevious()) {\n            loadPreviousImage();\n          } else {\n            setPosition(0);\n          }\n        }\n        if (lightboxSettings.touch.lastPos - lightboxSettings.touch.startPos < -lightboxSettings.touch.moveThreshold) {\n          if (isNext()) {\n            loadNextImage();\n          } else {\n            setPosition(0);\n          }\n        }\n      },\n      { passive: true }\n    );\n  }\n};\n\nwindow.initLightbox = initLightbox;\n"]}